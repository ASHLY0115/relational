<h2>Grammar definition</h2>
<p>This page defines the <em>formal grammar</em> that is used by relational.</p>

<h3>Literals</h3>

<p><em>Ident</em> literals are recognized by the regular expression:</p>

<pre><code>( letter | '_')( letter | digit | '_')*</pre></code>

<p>String literals String have the form <code>'x'</code>, where x is any sequence of any characters except <code>"</code> and <code>'</code>.</p>

<p>Reserved words and symbols, separated by a space</p>

<p>For the query</p>

<pre><code>    * - ∪ ∩ ÷ ⋈ ⧑ ⧒ ⧓ π σ ρ ➡ ( ) , - *</pre></code>


<p>For the expression in the select, the python operators:</p>

<pre><code>    + - * / > < >= <= == != and or not in **</pre></code>


<h3>Grammar</h3>

<pre><code>
    Query := Ident
    Query := Query BinaryOp Query
    Query := (Query)
    Query := σ PYExprWithoutParenthesis (Query) | σ (PYExpr) (Query)
    Query := π FieldList (Query)
    Query := ρ RenameList (Query)
    FieldList := Ident | Ident , FieldList
    RenameList := Ident ➡ Ident | Ident ➡ Ident , RenameList
    BinaryOp := * | - | ∪ | ∩ | ÷ | ⋈ | ⧑ | ⧒ | ⧓
</pre></code>

<p>Note the double definition of the select. It means that if the selection expression contains parenthesis, then the entire expression must be enclosed in an extra set of parenthesis.</p>
